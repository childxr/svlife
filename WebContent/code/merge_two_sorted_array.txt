/*
Given two sorted integer arrays A and B, merge B into A as one sorted array.
Note:
You may assume that A has enough space (size that is greater or equal to m + n) to hold additional elements from B. 
The number of elements initialized in A and B are m and n respectively.
*/

//这道题和归并排序的merge步骤相似
//只不过merge的方向是从右到左
//如果B数组已经完全遍历，而剩下A数组的元素了
//只需要更改迭代变量的值k，而无需再复制,因为A元素早已经就位

public void merge(int A[], int m, int B[], int n) {
    if (A == null || B == null || m < 0 || n < 0) return;
    int k = m+n-1;
    int i = m-1, j = n-1;
    while (k >= 0) {
        if(i >= 0 && j >= 0) {
            if (A[i] > B[j]) A[k--] = A[i--];
            else A[k--] = B[j--];
        } else if (j >= 0) {
            A[k--] = B[j--];
        } else k--;
    }
}