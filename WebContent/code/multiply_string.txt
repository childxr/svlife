/*
Given two numbers represented as strings, return multiplication of the numbers as a string.
Note: The numbers can be arbitrarily large and are non-negative.
*/

//这道题关键考的是细心和corner case
//首先，要把结果数组的长度计算出来，然后，对于两个数相乘，从右往左进行
//当前数的位置对应坐标为i+j+1，它的高位为i+j
//注意最后返回结果前，要考虑到结果可能是0125和0这两种不同的情况

public String multiply(String num1, String num2) {
    if (num1 == null || num2 == null || num1.length() == 0 || num2.length() == 0) return "";
    int[] ret = new int[num1.length()+num2.length()];
    for (int i = 0; i < ret.length; i++) ret[i] = 0;
    for (int i = num2.length()-1; i >= 0; i--) {
        for (int j = num1.length()-1; j >= 0; j--) {
            int rs = (num1.charAt(j)-'0')*(num2.charAt(i)-'0') + ret[i+j+1];
            ret[i+j+1] = rs%10;
            ret[i+j] += rs/10;
        }
    }
    StringBuffer bf = new StringBuffer();
    int i = 0;
    while (i < ret.length-1 && ret[i] == 0) i++;
    while (i < ret.length) bf.append(ret[i++]);
    return bf.toString();
}